<?php
	// Your RDBMS must be configured to accept connections
	// via TCP/IP and authentified by password.

	define('DB_TYPE', "pgsql"); // or mysql
	define('DB_HOST', "localhost");
	define('DB_USER', "fox");
	define('DB_NAME', "fox");
	define('DB_PASS', "XXXXXX");
	//define('DB_PORT', '5432'); // when neeeded, PG-only

	define('SELF_URL_PATH', 'http://localhost/tt-rss');
	// Full URL of your tt-rss installation. You need to set this option
	// correctly for tt-rss to function properly.

	define('SINGLE_USER_MODE', true);
	// Operate in single user mode, disables all functionality related to
	// multiple users.
	
	define('CACHE_DIR', 'cache');
	// Local cache directory for RSS feed content.

	define('SIMPLEPIE_CACHE_IMAGES', false);
	// Allow caching feed images when using SimplePie, to bypass hotlink
	// prevention and such at expense of local disk space and bandwidth.
	// Note that you (or your users) also have to enable image caching 
	// in feed editor.

	define('ICONS_DIR', "icons");
	define('ICONS_URL', "icons");
	// Local and URL path to the directory, where feed favicons are stored.
	// Unless you really know what you're doing, please keep those relative
	// to tt-rss main directory.
	// Please note that Apache may reserve /icons/ URL to itself so you might
	// need to change this and rename icons/ directory if you install tt-rss
	// into website root.

	define('TMP_DIRECTORY', '/tmp');
	// Directory for temporary files

	define('HTML_PURIFIER_CACHE', 'cache/htmlpurifier');
	// Directory to use for caching by HTMLPurifier

	define('DAEMON_SLEEP_INTERVAL', 120);
	// Interval between update daemon update runs

	define('DATABASE_BACKED_SESSIONS', false);
	// Store session information in a database, recommended for multiuser 
	// configurations. Doesn't seem to work for everyone, so enable with caution.
	// tt-rss uses default PHP session storing mechanism if disabled.

	define('SESSION_CHECK_ADDRESS', 1);
	// Check client IP address when validating session:
	// 0 - disable checking
	// 1 - check first 3 octets of an address (recommended)
	// 2 - check first 2 octets of an address
	// 3 - check entire address

	define('SESSION_COOKIE_LIFETIME', 0);
	// Default lifetime of a session (e.g. login) cookie. In seconds, 
	// 0 means cookie will be deleted when browser closes.

	define('SESSION_EXPIRE_TIME', 86400);
	// Hard expiration limit for sessions. Should be
	// greater or equal to SESSION_COOKIE_LIFETIME

	define('DAEMON_UPDATE_LOGIN_LIMIT', 0);
	// Stop updating feeds of user who haven't logged in specified 
	// amount of days. 0 disables.

	define('CHECK_FOR_NEW_VERSION', true);
	// Check for new versions of tt-rss automatically.

	define('DIGEST_ENABLE', true);
	// Global option to enable daily digests. Also toggles the ability of users
	// to forward articles by email.

	define('DIGEST_EMAIL_LIMIT', 10);
	// The maximum amount of emails sent in one digest batch

	define('DAEMON_SENDS_DIGESTS', true);
	// If update daemon and update_feeds should send digests
	// Disable if you prefer querying special URL (see wiki)

	define('MYSQL_CHARSET', 'UTF8');
	// Connection charset for MySQL. If you have a legacy database and/or experience
	// garbage unicode characters with this option, try setting it to a blank string.

	define('DEFAULT_UPDATE_METHOD', 0);
	// Which feed parsing library to use as default:
	// 0 - Magpie
	// 1 - SimplePie

	define('COUNTERS_MAX_AGE', 365);
	// Hard limit for unread counters calculation. Try tweaking this
	// parameter to speed up tt-rss when having a huge number of articles
	// in the database (better yet, enable purging!)

	define('DIGEST_FROM_NAME', 'Tiny Tiny RSS');
	define('DIGEST_FROM_ADDRESS', 'noreply@your.domain.dom');
	// Name, address and subject for sending outgoing mail. This applies
	// to password reset notifications, digest emails and any other mail.

	define('DIGEST_SUBJECT', '[tt-rss] New headlines for last 24 hours');
	// Subject line for email digests

	define('DIGEST_SMTP_HOST', '');
	// SMTP Host to send outgoing mail. Blank - use system MTA.

	define('DIGEST_SMTP_LOGIN', '');
	define('DIGEST_SMTP_PASSWORD', '');
	// These two options enable SMTP authentication when sending
	// outgoing mail. Require DIGEST_SMTP_HOST.

	define('DAEMON_FEED_LIMIT', 100);
	// Limits the amount of feeds daemon (or a cronjob) updates on one run

	define('ALLOW_REMOTE_USER_AUTH', false);
	// Set to 'true' if you trust your web server's REMOTE_USER 
	// environment variable that the user is logged in. This option can be 
	// used to integrate tt-rss with Apache's external authentication modules.

	define('AUTO_LOGIN', false);
	// Set this to true if you use ALLOW_REMOTE_USER_AUTH or client SSL
	// certificate authentication and you want to skip the login form. 
	// If set to true, users won't be able to set application language 
	// and settings profile.
	// Otherwise users will be redirected to login form with their login
	// information pre-filled.

	define('AUTO_CREATE_USER', false);
	// If users are authenticated by your web server, set this to true if
	// You want new users to be automaticaly created in tt-rss database
	// on first login

	define('LOCK_DIRECTORY', 'lock');
	// Directory for lockfiles, must be writable to the user you run
	// daemon process or cronjobs under.

	define('ENABLE_GZIP_OUTPUT', false);
	// Selectively gzip output to improve wire performance. This requires
	// PHP Zlib extension on the server.

	define('PHP_EXECUTABLE', '/usr/bin/php');
	// Path to PHP executable

	define('ENABLE_REGISTRATION', false);
	// Allow users to register themselves. Please be vary that allowing
	// random people to access your tt-rss installation is a security risk
	// and potentially might lead to data loss or server exploit. Disabled
	// by default.

	define('REG_NOTIFY_ADDRESS', 'user@your.domain.dom');
	// Email address to send new user notifications to.

	define('REG_MAX_USERS', 10);
	// Maximum amount of users which will be allowed to register on this
	// system. 0 - no limit.

	define('FEEDBACK_URL', '');
	// Displays an URL for users to provide feedback or comments regarding
	// this instance of tt-rss. Can lead to a forum, contact email, etc.

	define('FORCE_ARTICLE_PURGE', 0);
	// When this option is not 0, users ability to control feed purging
	// intervals is disabled and all articles (which are not starred) 
	// older than this amount of days are purged.

	define('SPHINX_ENABLED', false);
	// Enable fulltext search using Sphinx (http://www.sphinxsearch.com)
	// Please see http://tt-rss.org/wiki/SphinxSearch for more information.

	define('SPHINX_INDEX', 'ttrss');
	// Index name in Sphinx configuration. You can specify multiple indexes
	// as a comma-separated string.

	define('ENABLE_TWEET_BUTTON', false);
	// Enable 'tweet this' button for articles

	define('CONSUMER_KEY', '');
	define('CONSUMER_SECRET', '');
	// Your OAuth instance authentication information for Twitter, visit
	// http://twitter.com/oauth_clients to register your instance.

	define('PUBSUBHUBBUB_HUB', '');
	// URL to a PubSubHubbub-compatible hub server. If defined, Published
	// articles generated feeds would automatically become PUSH-enabled.

	define('ISCONFIGURED', false);
	// Please set this to true if you have read everything above and
	// finished setting configuration options.

	define('CONFIG_VERSION', 22);
	// Expected config version. Please update this option in config.php
	// if necessary (after migrating all new options from this file).

	// vim:ft=php
?>
